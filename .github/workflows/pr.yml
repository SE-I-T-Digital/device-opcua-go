name: Build Test and Scan

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions: # added using https://github.com/step-security/secure-repo
  contents: read

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Build the image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          tags: device-opcua:${{ github.sha }}
          load: true
      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
          TRIVY_DISABLE_VEX_NOTICE: "true"
        with:
          image-ref: device-opcua:${{ github.sha }}
          format: table
          exit-code: 1
          ignore-unfixed: true
          hide-progress: true
          severity: CRITICAL,HIGH,MEDIUM
          output: trivy.txt
      - name: Publish Trivy Output to Summary
        if: always()
        run: |
          if [[ -s trivy.txt ]]; then
            {
              echo "### Trivy Scan Results"
              echo ""
              echo '```terraform'
              cat trivy.txt
              echo '```'
            } >> $GITHUB_STEP_SUMMARY
          fi

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python3 -m pip install opcua cryptography
      - name: Run unit tests
        run: |
          make install-lint
          make test >> test-results.txt
      - name: Publish results to summary
        if: always()
        run: |
          if [[ -s test-results.txt ]]; then
            {
              echo "### Test Results"
              echo ""
              echo '```sh'
              cat test-results.txt
              echo '```'
            } >> $GITHUB_STEP_SUMMARY
          fi
